"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const coc_nvim_1 = require("coc.nvim");
function fixComment(disposables) {
    let lastChar = '';
    let lastTs = null;
    coc_nvim_1.events.on('InsertCharPre', ch => {
        lastChar = ch;
        lastTs = Date.now();
    }, null, disposables);
    coc_nvim_1.events.on('TextChangedI', (bufnr) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        let doc = coc_nvim_1.workspace.getDocument(bufnr);
        if (!doc)
            return;
        if (Date.now() - lastTs < 40 && lastChar == '*') {
            yield wait(20);
            let pos = yield coc_nvim_1.workspace.getCursorPosition();
            let line = doc.getline(pos.line);
            let pre = line.slice(0, pos.character);
            let end = line.slice(pos.character);
            if (!end && pre.endsWith('/**')) {
                yield coc_nvim_1.workspace.nvim.call('coc#util#setline', [pos.line + 1, `${pre} */`]);
            }
            yield wait(20);
            coc_nvim_1.commands.executeCommand('editor.action.triggerSuggest');
        }
        lastChar = null;
    }), null, disposables);
}
exports.fixComment = fixComment;
function wait(ms) {
    return new Promise(resolve => {
        setTimeout(() => {
            resolve();
        }, ms);
    });
}
//# sourceMappingURL=fixes.js.map