"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Range;
(function (Range) {
    Range.fromTextSpan = (span) => {
        return {
            start: {
                line: span.start.line - 1,
                character: span.start.offset - 1
            },
            end: {
                line: span.end.line - 1,
                character: span.end.offset - 1
            }
        };
    };
    Range.toFileRangeRequestArgs = (file, range) => ({
        file,
        startLine: range.start.line + 1,
        startOffset: range.start.character + 1,
        endLine: range.end.line + 1,
        endOffset: range.end.character + 1
    });
})(Range = exports.Range || (exports.Range = {}));
var Position;
(function (Position) {
    Position.fromLocation = (tslocation) => {
        return {
            line: tslocation.line - 1,
            character: tslocation.offset - 1
        };
    };
    Position.toFileLocationRequestArgs = (file, position) => ({
        file,
        line: position.line + 1,
        offset: position.character + 1
    });
})(Position = exports.Position || (exports.Position = {}));
var Location;
(function (Location) {
    Location.fromTextSpan = (uri, tsTextSpan) => {
        return {
            uri,
            range: Range.fromTextSpan(tsTextSpan)
        };
    };
})(Location = exports.Location || (exports.Location = {}));
var TextEdit;
(function (TextEdit) {
    TextEdit.fromCodeEdit = (edit) => {
        return {
            range: Range.fromTextSpan(edit),
            newText: edit.newText
        };
    };
})(TextEdit = exports.TextEdit || (exports.TextEdit = {}));
var WorkspaceEdit;
(function (WorkspaceEdit) {
    function fromFileCodeEdits(client, edits) {
        let changes = {};
        for (const edit of edits) {
            let uri = client.toResource(edit.fileName);
            changes[uri] = edit.textChanges.map(change => {
                return TextEdit.fromCodeEdit(change);
            });
        }
        return { changes };
    }
    WorkspaceEdit.fromFileCodeEdits = fromFileCodeEdits;
})(WorkspaceEdit = exports.WorkspaceEdit || (exports.WorkspaceEdit = {}));
//# sourceMappingURL=typeConverters.js.map