import { DocumentFormattingEditProvider, DocumentRangeFormattingEditProvider } from 'coc.nvim/lib/provider';
import { CancellationToken, FormattingOptions, Position, Range, TextDocument, TextEdit } from 'vscode-languageserver-protocol';
import { ITypeScriptServiceClient } from '../typescriptService';
import FileConfigurationManager from './fileConfigurationManager';
export default class TypeScriptFormattingProvider implements DocumentRangeFormattingEditProvider, DocumentFormattingEditProvider {
    private readonly client;
    private readonly formattingOptionsManager;
    constructor(client: ITypeScriptServiceClient, formattingOptionsManager: FileConfigurationManager);
    private doFormat;
    provideDocumentRangeFormattingEdits(document: TextDocument, range: Range, options: FormattingOptions, token: CancellationToken): Promise<TextEdit[]>;
    provideDocumentFormattingEdits(document: TextDocument, options: FormattingOptions, token?: CancellationToken): Promise<TextEdit[]>;
    provideOnTypeFormattingEdits(document: TextDocument, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): Promise<TextEdit[]>;
}
