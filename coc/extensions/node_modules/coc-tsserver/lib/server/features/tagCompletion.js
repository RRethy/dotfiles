"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
const typeConverters = tslib_1.__importStar(require("../utils/typeConverters"));
class TypeScriptTagCompletion {
    constructor(client) {
        this.client = client;
    }
    provideCompletionItems(document, position, token, context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const filepath = this.client.toPath(document.uri);
            if (!filepath)
                return undefined;
            if (context.triggerCharacter != '>') {
                return undefined;
            }
            const args = typeConverters.Position.toFileLocationRequestArgs(filepath, position);
            let body;
            try {
                const response = yield this.client.execute('jsxClosingTag', args, token);
                body = response && response.body;
                if (!body) {
                    return undefined;
                }
            }
            catch (_a) {
                return undefined;
            }
            return [this.getCompletion(body)];
        });
    }
    getCompletion(body) {
        const completion = vscode_languageserver_protocol_1.CompletionItem.create(body.newText);
        completion.insertText = this.getTagSnippet(body); // tslint:disable-line
        return completion;
    }
    getTagSnippet(closingTag) {
        let { newText, caretOffset } = closingTag;
        return newText.slice(0, caretOffset) + '$0' + newText.slice(caretOffset);
    }
}
exports.default = TypeScriptTagCompletion;
//# sourceMappingURL=tagCompletion.js.map