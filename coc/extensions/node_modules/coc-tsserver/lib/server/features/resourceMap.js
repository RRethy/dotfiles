"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Maps of file resources
 *
 * Attempts to handle correct mapping on both case sensitive and case in-sensitive
 * file systems.
 */
class ResourceMap {
    constructor(_normalizePath) {
        this._normalizePath = _normalizePath;
        this._map = new Map();
    }
    has(resource) {
        const file = this.toKey(resource);
        return !!file && this._map.has(file);
    }
    get(resource) {
        const file = this.toKey(resource);
        return file ? this._map.get(file) : undefined;
    }
    set(resource, value) {
        const file = this.toKey(resource);
        if (file) {
            this._map.set(file, value);
        }
    }
    delete(resource) {
        const file = this.toKey(resource);
        if (file) {
            this._map.delete(file);
        }
    }
    get values() {
        return this._map.values();
    }
    get keys() {
        return this._map.keys();
    }
    toKey(resource) {
        const key = this._normalizePath
            ? this._normalizePath(resource)
            : resource;
        if (!key) {
            return key;
        }
        return this.isCaseInsensitivePath(key) ? key.toLowerCase() : key;
    }
    isCaseInsensitivePath(path) {
        if (isWindowsPath(path)) {
            return true;
        }
        return path[0] === '/' && this.onIsCaseInsenitiveFileSystem;
    }
    get onIsCaseInsenitiveFileSystem() {
        if (process.platform === 'win32') {
            return true;
        }
        if (process.platform === 'darwin') {
            return true;
        }
        return false;
    }
}
exports.ResourceMap = ResourceMap;
function isWindowsPath(path) {
    return /^[a-zA-Z]:\\/.test(path);
}
exports.isWindowsPath = isWindowsPath;
//# sourceMappingURL=resourceMap.js.map