import { CodeActionProvider } from 'coc.nvim/lib/provider';
import { CancellationToken, CodeAction, CodeActionContext, Range, TextDocument } from 'vscode-languageserver-protocol';
import { ITypeScriptServiceClient } from '../typescriptService';
import BufferSyncSupport from './bufferSyncSupport';
import { DiagnosticsManager } from './diagnostics';
export default class TypeScriptQuickFixProvider implements CodeActionProvider {
    private readonly client;
    private readonly diagnosticsManager;
    private readonly bufferSyncSupport;
    private readonly supportedCodeActionProvider;
    constructor(client: ITypeScriptServiceClient, diagnosticsManager: DiagnosticsManager, bufferSyncSupport: BufferSyncSupport);
    provideCodeActions(document: TextDocument, _range: Range, context: CodeActionContext, token: CancellationToken): Promise<CodeAction[]>;
    private getFixesForDiagnostic;
    private getAllFixesForTsCodeAction;
    private getSingleFixForTsCodeAction;
    private getFixAllForTsCodeAction;
}
