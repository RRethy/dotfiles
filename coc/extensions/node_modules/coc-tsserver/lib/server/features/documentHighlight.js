"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
const typeConverters = tslib_1.__importStar(require("../utils/typeConverters"));
class TypeScriptDocumentHighlightProvider {
    constructor(client) {
        this.client = client;
    }
    provideDocumentHighlights(resource, position, token) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const file = this.client.toPath(resource.uri);
            if (!file)
                return [];
            const args = typeConverters.Position.toFileLocationRequestArgs(file, position);
            try {
                const response = yield this.client.execute('occurrences', args, token);
                if (response && response.body) {
                    return response.body
                        .filter(x => !x.isInString)
                        .map(documentHighlightFromOccurance);
                }
            }
            catch (_a) {
                // noop
            }
            return [];
        });
    }
}
exports.default = TypeScriptDocumentHighlightProvider;
function documentHighlightFromOccurance(occurrence // tslint:disable-line
) {
    return {
        range: typeConverters.Range.fromTextSpan(occurrence),
        kind: occurrence.isWriteAccess ? vscode_languageserver_protocol_1.DocumentHighlightKind.Write : vscode_languageserver_protocol_1.DocumentHighlightKind.Read
    };
}
//# sourceMappingURL=documentHighlight.js.map