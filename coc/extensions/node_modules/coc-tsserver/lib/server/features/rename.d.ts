import { RenameProvider } from 'coc.nvim/lib/provider';
import { CancellationToken, Position, Range, TextDocument, WorkspaceEdit } from 'vscode-languageserver-protocol';
import * as Proto from '../protocol';
import { ITypeScriptServiceClient, ServerResponse } from '../typescriptService';
export default class TypeScriptRenameProvider implements RenameProvider {
    private readonly client;
    constructor(client: ITypeScriptServiceClient);
    prepareRename(document: TextDocument, position: Position, token: CancellationToken): Promise<Range | null>;
    provideRenameEdits(document: TextDocument, position: Position, newName: string, token: CancellationToken): Promise<WorkspaceEdit | null>;
    execRename(document: TextDocument, position: Position, token: CancellationToken): Promise<ServerResponse<Proto.RenameResponse> | undefined>;
    private toWorkspaceEdit;
    private renameFile;
}
